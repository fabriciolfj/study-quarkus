quarkus.container-image.group=quarkus-mp
quarkus.container-image.name=account-service
quarkus.kubernetes.name=account-service
quarkus.kubernetes-client.namespace=default

quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/test
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=root
quarkus.datasource.password=root

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql

%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=username-default
%test.quarkus.datasource.password=
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect


%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=db-credentials
%prod.quarkus.datasource.username=${username}
%prod.quarkus.datasource.password=${password}
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/quarkus_banking

quarkus.datasource.health.enabled = false
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.ui.always-include = true 

# Health Probe configuration
quarkus.kubernetes.liveness-probe.initial-delay=10
quarkus.kubernetes.liveness-probe.period=2
quarkus.kubernetes.liveness-probe.timeout=5

quarkus.kubernetes.readiness-probe.initial-delay=10
quarkus.kubernetes.readiness-probe.period=2
quarkus.kubernetes.readiness-probe.timeout=5


mp.messaging.outgoing.account-overdrawn.connector=smallrye-kafka
mp.messaging.outgoing.account-overdrawn.topic=overdrawn
mp.messaging.outgoing.account-overdrawn.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.incoming.overdraft-update.connector=smallrye-kafka
mp.messaging.incoming.overdraft-update.topic=new-limit
mp.messaging.incoming.overdraft-update.value.deserializer=com.github.fabriciolfj.account.adapter.out.events.deserializer.OverdraftLimitUpdateDeserializer

kafka.bootstrap.servers=localhost:9092
%prod.kafka.bootstrap.servers=kafka:9092
