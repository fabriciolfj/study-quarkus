quarkus.http.port=6060
quarkus.container-image.group=overdraft-mp
quarkus.container-image.name=overdraft-service
quarkus.kubernetes.name=overdraft-service
quarkus.kubernetes-client.namespace=quarkus

quarkus.datasource.health.enabled = false
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.ui.always-include = true 

# Health Probe configuration
quarkus.kubernetes.liveness-probe.initial-delay=10
quarkus.kubernetes.liveness-probe.period=2
quarkus.kubernetes.liveness-probe.timeout=5

quarkus.kubernetes.readiness-probe.initial-delay=10
quarkus.kubernetes.readiness-probe.period=2
quarkus.kubernetes.readiness-probe.timeout=5



kafka.bootstrap.servers=localhost:9092
%prod.kafka.bootstrap.servers=kafka:9092

mp.messaging.outgoing.overdraft-update.connector=smallrye-kafka
mp.messaging.outgoing.overdraft-update.topic=new-limit
mp.messaging.outgoing.overdraft-update.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer

mp.messaging.incoming.account-overdrawn.connector=smallrye-kafka
mp.messaging.incoming.account-overdrawn.topic=overdrawn
mp.messaging.incoming.account-overdrawn.value.deserializer=com.github.fabriciolfj.overdraft.OverdrawDeserializer
mp.messaging.incoming.account-overdrawn.enable.auto.commit=true

%prod.quarkus.jaeger.endpoint=http://simplest-collector.observability:14268/api/traces
quarkus.jaeger.service-name=overdraft-service
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1

mp.messaging.incoming.account-overdrawn.interceptor.classes=io.opentracing.contrib.kafka.TracingConsumerInterceptor
mp.messaging.outgoing.overdraft-update.interceptor.classes=io.opentracing.contrib.kafka.TracingProducerInterceptor